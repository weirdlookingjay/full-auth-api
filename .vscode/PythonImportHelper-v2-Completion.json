[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "getenv",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_random_secret_key",
        "importPath": "django.core.management.utils",
        "description": "django.core.management.utils",
        "isExtraImport": true,
        "detail": "django.core.management.utils",
        "documentation": {}
    },
    {
        "label": "dotenv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dotenv",
        "description": "dotenv",
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenVerifyView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\ndotenv_file = BASE_DIR / \".env.local\"\nif path.isfile(dotenv_file):\n    dotenv.load_dotenv(dotenv_file)\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = getenv(\"DJANGO_SECRET_KEY\", get_random_secret_key())\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = getenv('DEBUG', 'False') == 'True'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "dotenv_file",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "dotenv_file = BASE_DIR / \".env.local\"\nif path.isfile(dotenv_file):\n    dotenv.load_dotenv(dotenv_file)\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = getenv(\"DJANGO_SECRET_KEY\", get_random_secret_key())\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = getenv('DEBUG', 'False') == 'True'\nALLOWED_HOSTS = getenv('DJANGO_ALLOWED_HOSTS',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = getenv(\"DJANGO_SECRET_KEY\", get_random_secret_key())\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = getenv('DEBUG', 'False') == 'True'\nALLOWED_HOSTS = getenv('DJANGO_ALLOWED_HOSTS',\n                       '127.0.0.1, localhost').split(',')\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = getenv('DEBUG', 'False') == 'True'\nALLOWED_HOSTS = getenv('DJANGO_ALLOWED_HOSTS',\n                       '127.0.0.1, localhost').split(',')\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = getenv('DJANGO_ALLOWED_HOSTS',\n                       '127.0.0.1, localhost').split(',')\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',\n    'rest_framework',\n    'djoser',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    \"default\": dj_database_url.config(\n        default=getenv(\"DATABASE_URL\"),\n        conn_max_age=600,\n        conn_health_checks=True,\n    )\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": dj_database_url.config(\n        default=getenv(\"DATABASE_URL\"),\n        conn_max_age=600,\n        conn_health_checks=True,\n    )\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\nREST_FRAMEWORK = {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'users.authentication.CustomJWTAuthentication',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'users.authentication.CustomJWTAuthentication',\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'users.authentication.CustomJWTAuthentication',\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',\n    ]",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'users.authentication.CustomJWTAuthentication',\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',\n    ]\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'media'\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'users.authentication.CustomJWTAuthentication',\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',\n    ]\n}\nDJOSER = {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'users.authentication.CustomJWTAuthentication',\n    ],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',\n    ]\n}\nDJOSER = {\n    'PASSWORD_RESET_CONFIRM_URL': 'password-reset/{uid}/{token}',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DJOSER = {\n    'PASSWORD_RESET_CONFIRM_URL': 'password-reset/{uid}/{token}',\n    'SEND_ACTIVATION_EMAIL': True,\n    'ACTIVATION_URL': 'activatation/{uid}/{token}',\n    'USER_CREATE_PASSWORD_RETYPE': True,\n    'PASSWORD_RESET_CONFIRM_RETYPE': True,\n    'TOKEN_MODEL': None\n}\nAUTH_COOKIE = 'access'\nAUTH_COOKIE_ACCESS_MAX_AGE = 60 * 5  # 5 minues",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_COOKIE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_COOKIE = 'access'\nAUTH_COOKIE_ACCESS_MAX_AGE = 60 * 5  # 5 minues\nAUTH_COOKIE_REFRESH_MAX_AGE = 60 * 60 * 24  # 1 day\nAUTH_COOKIE_SECURE = getenv('AUTH_COOKIE_SECURE', 'False') == 'True'\nAUTH_COOKIE_HTTP_ONLY = 'True'\nAUTH_COOKIE_PATH = '/'\nAUTH_COOKIE_SAMESITE = 'None'\nCORS_ALLOWED_ORIGINS = getenv(\n    'CORS_ALLOWED_ORIGINS', 'http://localhost:3000, http://127.0.0.1:3000').split(',')\nCORS_ALLOW_CREDENTIALS = True",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_COOKIE_ACCESS_MAX_AGE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_COOKIE_ACCESS_MAX_AGE = 60 * 5  # 5 minues\nAUTH_COOKIE_REFRESH_MAX_AGE = 60 * 60 * 24  # 1 day\nAUTH_COOKIE_SECURE = getenv('AUTH_COOKIE_SECURE', 'False') == 'True'\nAUTH_COOKIE_HTTP_ONLY = 'True'\nAUTH_COOKIE_PATH = '/'\nAUTH_COOKIE_SAMESITE = 'None'\nCORS_ALLOWED_ORIGINS = getenv(\n    'CORS_ALLOWED_ORIGINS', 'http://localhost:3000, http://127.0.0.1:3000').split(',')\nCORS_ALLOW_CREDENTIALS = True\n# Default primary key field type",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_COOKIE_REFRESH_MAX_AGE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_COOKIE_REFRESH_MAX_AGE = 60 * 60 * 24  # 1 day\nAUTH_COOKIE_SECURE = getenv('AUTH_COOKIE_SECURE', 'False') == 'True'\nAUTH_COOKIE_HTTP_ONLY = 'True'\nAUTH_COOKIE_PATH = '/'\nAUTH_COOKIE_SAMESITE = 'None'\nCORS_ALLOWED_ORIGINS = getenv(\n    'CORS_ALLOWED_ORIGINS', 'http://localhost:3000, http://127.0.0.1:3000').split(',')\nCORS_ALLOW_CREDENTIALS = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_COOKIE_SECURE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_COOKIE_SECURE = getenv('AUTH_COOKIE_SECURE', 'False') == 'True'\nAUTH_COOKIE_HTTP_ONLY = 'True'\nAUTH_COOKIE_PATH = '/'\nAUTH_COOKIE_SAMESITE = 'None'\nCORS_ALLOWED_ORIGINS = getenv(\n    'CORS_ALLOWED_ORIGINS', 'http://localhost:3000, http://127.0.0.1:3000').split(',')\nCORS_ALLOW_CREDENTIALS = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_COOKIE_HTTP_ONLY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_COOKIE_HTTP_ONLY = 'True'\nAUTH_COOKIE_PATH = '/'\nAUTH_COOKIE_SAMESITE = 'None'\nCORS_ALLOWED_ORIGINS = getenv(\n    'CORS_ALLOWED_ORIGINS', 'http://localhost:3000, http://127.0.0.1:3000').split(',')\nCORS_ALLOW_CREDENTIALS = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.UserAccount'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_COOKIE_PATH",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_COOKIE_PATH = '/'\nAUTH_COOKIE_SAMESITE = 'None'\nCORS_ALLOWED_ORIGINS = getenv(\n    'CORS_ALLOWED_ORIGINS', 'http://localhost:3000, http://127.0.0.1:3000').split(',')\nCORS_ALLOW_CREDENTIALS = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.UserAccount'\n# Email Settings",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_COOKIE_SAMESITE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_COOKIE_SAMESITE = 'None'\nCORS_ALLOWED_ORIGINS = getenv(\n    'CORS_ALLOWED_ORIGINS', 'http://localhost:3000, http://127.0.0.1:3000').split(',')\nCORS_ALLOW_CREDENTIALS = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.UserAccount'\n# Email Settings\nEMAIL_BACKEND = 'django_ses.SESBackend'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = getenv(\n    'CORS_ALLOWED_ORIGINS', 'http://localhost:3000, http://127.0.0.1:3000').split(',')\nCORS_ALLOW_CREDENTIALS = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.UserAccount'\n# Email Settings\nEMAIL_BACKEND = 'django_ses.SESBackend'\nDEFAULT_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.UserAccount'\n# Email Settings\nEMAIL_BACKEND = 'django_ses.SESBackend'\nDEFAULT_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nAWS_SES_ACCESS_KEY_ID = getenv('AWS_SES_ACCESS_KEY_ID')\nAWS_SES_SECRET_ACCESS_KEY = getenv('AWS_SES_SECRET_ACCESS_KEY')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.UserAccount'\n# Email Settings\nEMAIL_BACKEND = 'django_ses.SESBackend'\nDEFAULT_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nAWS_SES_ACCESS_KEY_ID = getenv('AWS_SES_ACCESS_KEY_ID')\nAWS_SES_SECRET_ACCESS_KEY = getenv('AWS_SES_SECRET_ACCESS_KEY')\nAWS_REGION_NAME = getenv('AWS_REGION_NAME')\nAWS_DEFAULT_REGION = getenv('AWS_DEFAULT_REGION')\nAWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.UserAccount'\n# Email Settings\nEMAIL_BACKEND = 'django_ses.SESBackend'\nDEFAULT_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nAWS_SES_ACCESS_KEY_ID = getenv('AWS_SES_ACCESS_KEY_ID')\nAWS_SES_SECRET_ACCESS_KEY = getenv('AWS_SES_SECRET_ACCESS_KEY')\nAWS_REGION_NAME = getenv('AWS_REGION_NAME')\nAWS_DEFAULT_REGION = getenv('AWS_DEFAULT_REGION')\nAWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'\nAWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django_ses.SESBackend'\nDEFAULT_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nAWS_SES_ACCESS_KEY_ID = getenv('AWS_SES_ACCESS_KEY_ID')\nAWS_SES_SECRET_ACCESS_KEY = getenv('AWS_SES_SECRET_ACCESS_KEY')\nAWS_REGION_NAME = getenv('AWS_REGION_NAME')\nAWS_DEFAULT_REGION = getenv('AWS_DEFAULT_REGION')\nAWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'\nAWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nUSE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FROM_EMAIL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nAWS_SES_ACCESS_KEY_ID = getenv('AWS_SES_ACCESS_KEY_ID')\nAWS_SES_SECRET_ACCESS_KEY = getenv('AWS_SES_SECRET_ACCESS_KEY')\nAWS_REGION_NAME = getenv('AWS_REGION_NAME')\nAWS_DEFAULT_REGION = getenv('AWS_DEFAULT_REGION')\nAWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'\nAWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nUSE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_SES_ACCESS_KEY_ID",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AWS_SES_ACCESS_KEY_ID = getenv('AWS_SES_ACCESS_KEY_ID')\nAWS_SES_SECRET_ACCESS_KEY = getenv('AWS_SES_SECRET_ACCESS_KEY')\nAWS_REGION_NAME = getenv('AWS_REGION_NAME')\nAWS_DEFAULT_REGION = getenv('AWS_DEFAULT_REGION')\nAWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'\nAWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nUSE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_SES_SECRET_ACCESS_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AWS_SES_SECRET_ACCESS_KEY = getenv('AWS_SES_SECRET_ACCESS_KEY')\nAWS_REGION_NAME = getenv('AWS_REGION_NAME')\nAWS_DEFAULT_REGION = getenv('AWS_DEFAULT_REGION')\nAWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'\nAWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nUSE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_REGION_NAME",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AWS_REGION_NAME = getenv('AWS_REGION_NAME')\nAWS_DEFAULT_REGION = getenv('AWS_DEFAULT_REGION')\nAWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'\nAWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nUSE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_DEFAULT_REGION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AWS_DEFAULT_REGION = getenv('AWS_DEFAULT_REGION')\nAWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'\nAWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nUSE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_SES_REGION_ENDPOINT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AWS_SES_REGION_ENDPOINT = f'email.{AWS_REGION_NAME}.amazonaws.com'\nAWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nUSE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_SES_FROM_EMAIL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AWS_SES_FROM_EMAIL = getenv('AWS_SES_FROM_EMAIL')\nUSE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_SES_V2",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_SES_V2 = True\nDOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DOMAIN",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DOMAIN = getenv('DOMAIN')\nSITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SITE_NAME",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SITE_NAME = getenv('SITE_NAME')",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include('djoser.urls')),\n    path('api/', include('users.urls')),\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0001_initial",
        "description": "users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserAccount',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "users.apps",
        "description": "users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "users.apps",
        "documentation": {}
    },
    {
        "label": "CustomJWTAuthentication",
        "kind": 6,
        "importPath": "users.authentication",
        "description": "users.authentication",
        "peekOfCode": "class CustomJWTAuthentication(JWTAuthentication):\n    def authenticate(self, request):\n        try:\n            header = self.get_header(request)\n            if header is None:\n                raw_token = request.COOKIES.get(settings.AUTH_COOKIE)\n            else:\n                raw_token = self.get_raw_token(header)\n            if raw_token is None:\n                return None",
        "detail": "users.authentication",
        "documentation": {}
    },
    {
        "label": "UserAccountManager",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class UserAccountManager(BaseUserManager):\n    def create_user(self, email, first_name, last_name, password=None):\n        if not email:\n            raise ValueError('Users must have an email address')\n        email = self.normalize_email(email)\n        email = email.lower()\n        user = self.model(\n            email=email,\n            first_name=first_name,\n            last_name=last_name",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "UserAccount",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class UserAccount(AbstractBaseUser, PermissionsMixin):\n    first_name = models.CharField(max_length=255)\n    last_name = models.CharField(max_length=255)\n    email = models.EmailField(unique=True, max_length=255)\n    is_active = models.BooleanField(default=True)\n    is_staff = models.BooleanField(default=False)\n    is_superuser = models.BooleanField(default=False)\n    objects = UserAccountManager()\n    USERNAME_FIELD = \"email\"\n    REQUIRED_FIELDS = ['first_name', 'last_name']",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "users.urls",
        "description": "users.urls",
        "peekOfCode": "urlpatterns = [\n    path('jwt/create/', CustomTokenObtainPairView.as_view()),\n    path('jwt/refresh/', CustomTokenRefreshView.as_view()),\n    path('jwt/verify/', CustomTokenVerifyView.as_view()),\n    path('logout/', LogoutView.as_view()),\n]",
        "detail": "users.urls",
        "documentation": {}
    },
    {
        "label": "CustomTokenObtainPairView",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class CustomTokenObtainPairView(TokenObtainPairView):\n    def post(self, request, *args, **kwargs):\n        response = super().post(request, *args, **kwargs)\n        if response.status_code == 200:\n            access_token = response.data['access']\n            refresh_token = response.data['refresh']\n            response.set_cookie(\n                'access',\n                access_token,\n                max_age=settings.AUTH_COOKIE_ACCESS_MAX_AGE,",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "CustomTokenRefreshView",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class CustomTokenRefreshView(TokenRefreshView):\n    def post(self, request, *args, **kwargs):\n        refresh_token = request.COOKIES.get('refresh')\n        if refresh_token:\n            request.data['refresh'] = refresh_token\n        response = super().post(request, *args, **kwargs)\n        if response.status_code == 200:\n            access_token = response.data.get('access')\n            response.set_cookie(\n                'access',",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "CustomTokenVerifyView",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class CustomTokenVerifyView(TokenVerifyView):\n    def post(self, request, *args, **kwargs):\n        access_token = request.COOKIES.get('access')\n        if access_token:\n            request.data['token'] = access_token\n        return super().post(request, *args, **kwargs)\nclass LogoutView(APIView):\n    def post(self, request, *args, **kwargs):\n        response = Response(status=status.HTTP_204_NO_CONTENT)\n        response.delete_cookie('access')",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "LogoutView",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class LogoutView(APIView):\n    def post(self, request, *args, **kwargs):\n        response = Response(status=status.HTTP_204_NO_CONTENT)\n        response.delete_cookie('access')\n        response.delete_cookie('refresh')\n        return response",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "venv.Scripts.jp",
        "description": "venv.Scripts.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": "venv.Scripts.jp",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]